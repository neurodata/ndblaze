"""
Django settings for ndblaze project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import settings_secret

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
from ndblazepaths import NDBLAZE_NDLIB_PATH

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = settings_secret.SECRET_KEY
USER = settings_secret.USER
PASSWORD = settings_secret.PASSWORD

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blaze',
    'djcelery',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    #'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'ndblaze.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ndblaze.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ndblaze_django',
        'USER': settings_secret.USER,
        'PASSWORD': settings_secret.PASSWORD,
        'HOST': 'localhost',
        'PORT': '',
    
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

# Logging config
LOGGING = {
  'version': 1,
  'disable_existing_loggers': True,
  'formatters': {
    'standard': {
      'format': "[%(asctime)s] %(levelname)s [%(name)s:%(module)s:%(lineno)s]%(message)s",
      'datefmt': "%d/%b/%Y %H:%M:%S"
    },
  },
  'handlers': {
    # 'null': {
    # 'level': 'DEBUG',
    # 'class': 'django.utils.log.NullHandler'
    # },
    'logfile': {
      'level': 'DEBUG',
      'class': 'logging.handlers.RotatingFileHandler',
      'filename': '/var/log/neurodata/ndblaze.log',
      'maxBytes': 500000,
      'backupCount' : 7,
      'formatter': 'standard',
    },
    'console': {
      'level': 'INFO',
      'class': 'logging.StreamHandler',
      'formatter': 'standard',
    }
  },
  'loggers': {
    'django': {
      'handlers': ['console'],
      'level': 'DEBUG',
      'propagate': True,
    },
    'django.db.backends': {
      'handlers': ['console'],
      'level': 'DEBUG',
      'propagate': False,
    },
    'ndblaze': {
      'handlers': ['console', 'logfile'],
      'level': 'WARN',
    }
  },
}


# Celery Settings
# BROKER_URL = 'amqp://guest@localhost:5672'
BROKER_URL = 'amqp://neurodata:neur0data@172.31.14.96:5672/neurodata_host'
CELERY_TASK_SERIALIZER = 'pickle'
CELERY_RESULT_SERIALIZER = 'pickle'
CELERY_ACCEPT_CONTENT=['json','pickle']
CELERYD_PREFETCH_MULTIPLIER = 8
CELERYD_CONCURRENCY = 16

# Backend to connect to
SITE_HOST = '52.90.163.140/nd'
DBNAME = 'ndblaze'
REDIS_SERVER = '172.31.14.96'
MYSQL_SERVER = '172.31.14.96'
